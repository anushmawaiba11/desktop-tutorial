abstract class Employee {
    private String name;
    private double salary;


    public Employee(String name, double salary) throws Exception {
        if (salary <= 0) {
            throw new Exception("Invalid salary! Salary must be greater than 0.");
        }
        this.name = name;
        this.salary = salary;
    }


    public String getName() { return name; }
    public double getSalary() { return salary; }


    public abstract double calculateBonus();
}


class PermanentEmployee extends Employee {
    public PermanentEmployee(String name, double salary) throws Exception {
        super(name, salary);
    }

    @Override
    public double calculateBonus() {
        
        return getSalary() * 0.20;
    }
}


class ContractEmployee extends Employee {
    public ContractEmployee(String name, double salary) throws Exception {
        super(name, salary);
    }

    @Override
    public double calculateBonus() {

        return getSalary() * 0.10;
    }
}


public class EmployeeDemo {
    public static void main(String[] args) {
        try {
            Employee e1 = new PermanentEmployee("Alice", 50000);
            Employee e2 = new ContractEmployee("Bob", 30000);


            System.out.println(e1.getName() + " Bonus: " + e1.calculateBonus());
            System.out.println(e2.getName() + " Bonus: " + e2.calculateBonus());


            Employee e3 = new ContractEmployee("Charlie", -1000); // Will throw exception
            System.out.println(e3.getName() + " Bonus: " + e3.calculateBonus());

        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }
}

