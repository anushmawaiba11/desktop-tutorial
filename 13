class InvalidLoanAmountException extends Exception {
    public InvalidLoanAmountException(String message) {
        super(message);
    }
}


abstract class Loan {
    private double amount;
    private double rate;

    public Loan(double amount, double rate) throws InvalidLoanAmountException {
        if (amount <= 0) {
            throw new InvalidLoanAmountException("Loan amount must be greater than 0!");
        }
        this.amount = amount;
        this.rate = rate;
    }

    public double getAmount() {
        return amount;
    }

    public double getRate() {
        return rate;
    }

  
    public abstract double calculateInterest();
}


class HomeLoan extends Loan {
    public HomeLoan(double amount, double rate) throws InvalidLoanAmountException {
        super(amount, rate);
    }

    @Override
    public double calculateInterest() {
        return getAmount() * getRate() * 10 / 100; // 10 years example
    }
}


class CarLoan extends Loan {
    public CarLoan(double amount, double rate) throws InvalidLoanAmountException {
        super(amount, rate);
    }

    @Override
    public double calculateInterest() {
        return getAmount() * getRate() * 5 / 100; // 5 years
    }
}


class EducationLoan extends Loan {
    public EducationLoan(double amount, double rate) throws InvalidLoanAmountException {
        super(amount, rate);
    }

    @Override
    public double calculateInterest() {
        return getAmount() * getRate() * 7 / 100; // 7 years
    }
}


public class LoanProcessingSystem {
    public static void main(String[] args) {
        try {
            Loan[] loans = {
                    new HomeLoan(500000, 0.08),
                    new CarLoan(200000, 0.09),
                    new EducationLoan(300000, 0.07)
            };

           
            for (Loan l : loans) {
                System.out.println(l.getClass().getSimpleName() +
                        " Interest: " + l.calculateInterest());
            }

           
            Loan invalid = new CarLoan(-50000, 0.09);
            invalid.calculateInterest();

        } catch (InvalidLoanAmountException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}

